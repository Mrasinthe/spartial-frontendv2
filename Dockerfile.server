# Use Ubuntu 20.04 as the base image
FROM ubuntu:20.04

# Set noninteractive environment variable to avoid prompts during package installation
ARG DEBIAN_FRONTEND=noninteractive
ARG DOCKERFILE_CONTEXT

# Update the package list and install necessary packages in a single RUN command to reduce layers
RUN apt-get update -y && \
    apt-get install -y \
        git wget cmake gcc g++ cpp curl software-properties-common graphviz \
        python3.8 python3.8-venv \
    && curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py \
    && python3.8 get-pip.py pip==20.0.2 \
    && curl -sL https://deb.nodesource.com/setup_19.x | bash \
    && apt-get install -y nodejs \
    && npm install pm2 -g \
    && apt-get install -y \
        libconfuse-dev libpcap-dev libxml2-dev net-tools \
    && ldconfig

# Check Python and pip versions
RUN python3.8 --version \
    && pip3 --version

# Copy the application directory
COPY ./maip ./maip-app

# Create a Python virtual environment
RUN python3.8 -m venv /venv

# Activate the virtual environment and install Python packages
RUN . /venv/bin/activate \
    && pip install --upgrade pip \
    && pip install -r maip-app/src/server/deep-learning/requirements.txt

# Install Node.js packages
WORKDIR /maip-app
RUN npm install

# Copy environment variables
COPY ./maip/env.example ./maip-app/.env

# Install MMT packages
RUN dpkg -i ./maip-app/src/server/mmt-packages/mmt-dpi*.deb \
    && dpkg -i ./maip-app/src/server/mmt-packages/mmt-security*.deb \
    && dpkg -i ./maip-app/src/server/mmt-packages/mmt-probe*.deb 2>/dev/null || true \
    && ldconfig

# Set environment variable
ENV DOCKER_ENV=true

# Expose the port
EXPOSE 31057

# Set the command to run the application
CMD ./start-maip.sh
